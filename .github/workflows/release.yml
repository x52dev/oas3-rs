name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.13.0

      - name: Authenticate with crates.io
        uses: rust-lang/crates-io-auth-action@v1.0.1
        id: auth

      - name: release-plz
        uses: MarcoIeni/release-plz-action@v0.5.110
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
          RUST_LOG: debug
        id: release-plz

      - name: Bump changelog versions
        if: ${{ steps.release-plz.outputs.prs_created }}
        run: |
          # store release-plz output locally
          echo '${{ steps.release-plz.outputs.pr }}' > rplz.json

          # bump while still on main so that versions in manifests are current
          scripts/bump-changelogs "$(cat rplz.json)"

          # apply changelog updates to branch using next versions
          head_branch="$(<rplz.json jq -r '.head_branch')"
          git fetch origin
          git switch "$head_branch"

          # clean up temporaries
          rm -f rplz.json

          # update release PR
          git add --all
          git commit -m "docs: update changelog versions"
          git push origin "$head_branch"
